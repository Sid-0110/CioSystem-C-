@using CioSystem.Models
@model IEnumerable<CioSystem.Web.Controllers.InventoryWithProduct>

@{
    ViewData["Title"] = "庫存管理";
}

<div class="page-header fade-in">
    <div class="page-title">庫存管理</div>
    <div class="page-subtitle">管理您的庫存項目和數量</div>
</div>

<!-- 統計卡片 -->
<div class="row mb-4 fade-in">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card" style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%); color: white;">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@(ViewBag.TotalInventoryItems ?? 0)</h4>
                        <small>總庫存項目</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-warehouse fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card" style="background: linear-gradient(135deg, #10b981 0%, #059669 100%); color: white;">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@(ViewBag.NormalInventory ?? 0)</h4>
                        <small>正常庫存</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-check-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card" style="background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); color: white;">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@(ViewBag.LowStockInventory ?? 0)</h4>
                        <small>低庫存</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="card" style="background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%); color: white;">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@(ViewBag.OutOfStockInventory ?? 0)</h4>
                        <small>缺貨</small>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-times-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 錯誤訊息顯示 -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- 成功訊息顯示 -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- 搜尋和篩選 -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" asp-action="Index" class="row g-3">
            <div class="col-md-3">
                <label for="productId" class="form-label">產品</label>
                <select name="productId" id="productId" class="form-select">
                    <option value="">全部產品</option>
                    @if (ViewBag.Products != null)
                    {
                        @foreach (var product in (List<Product>)ViewBag.Products)
                        {
                            <option value="@product.Id" selected="@(ViewBag.ProductId?.ToString() == product.Id.ToString())">
                                @product.Name (@product.SKU)
                            </option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="productSKU" class="form-label">產品編號</label>
                <input type="text" name="productSKU" id="productSKU" class="form-control"
                       value="@ViewBag.ProductSKU" placeholder="輸入產品編號">
            </div>
            <div class="col-md-3">
                <label for="status" class="form-label">庫存狀態</label>
                <select name="status" id="status" class="form-select">
                    <option value="">全部狀態</option>
                    <option value="1" selected="@(ViewBag.Status?.ToString() == "1")">正常</option>
                    <option value="2" selected="@(ViewBag.Status?.ToString() == "2")">低庫存</option>
                    <option value="3" selected="@(ViewBag.Status?.ToString() == "3")">缺貨</option>
                    <option value="4" selected="@(ViewBag.Status?.ToString() == "4")">過量庫存</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="pageSize" class="form-label">每頁顯示</label>
                <select name="pageSize" id="pageSize" class="form-select">
                    <option value="10" selected="@(ViewBag.PageSize?.ToString() == "10")">10 筆</option>
                    <option value="25" selected="@(ViewBag.PageSize?.ToString() == "25")">25 筆</option>
                    <option value="50" selected="@(ViewBag.PageSize?.ToString() == "50")">50 筆</option>
                    <option value="100" selected="@(ViewBag.PageSize?.ToString() == "100")">100 筆</option>
                </select>
            </div>
            <div class="col-12">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="fas fa-search"></i> 搜尋
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-times"></i> 清除篩選
                </a>
            </div>
        </form>
    </div>
</div>

<!-- 庫存記錄表格 -->
<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-list me-2"></i>庫存列表
                @if (ViewBag.TotalCount != null)
                {
                    <small class="text-muted">(共 @ViewBag.TotalCount 筆記錄)</small>
                }
            </h5>
            <div>
                <button type="button" class="btn btn-warning me-2" data-bs-toggle="modal" data-bs-target="#batchSafetyStockModal">
                    <i class="fas fa-edit"></i> 批量更改安全庫存
                </button>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> 新增庫存
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>產品名稱</th>
                        <th>產品編號</th>
                        <th>庫存數量</th>
                        <th>安全庫存</th>
                        <th>預留數量</th>
                        <th>庫存狀態</th>
                        <th>庫存類型</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Inventory.Id</td>
                                <td>@(item.Product?.Name ?? "未知產品")</td>
                                <td>@(item.Inventory.ProductSKU ?? item.Product?.SKU ?? "N/A")</td>
                                <td>@item.Inventory.Quantity</td>
                                <td>@item.Inventory.SafetyStock</td>
                                <td>@item.Inventory.ReservedQuantity</td>
                                <td>
                                    @switch (item.Inventory.Status)
                                    {
                                        case InventoryStatus.Normal:
                                            <span class="badge bg-success">正常</span>
                                            break;
                                        case InventoryStatus.LowStock:
                                            <span class="badge bg-warning">低庫存</span>
                                            break;
                                        case InventoryStatus.OutOfStock:
                                            <span class="badge bg-danger">缺貨</span>
                                            break;
                                        case InventoryStatus.Excess:
                                            <span class="badge bg-info">過剩</span>
                                            break;
                                        case InventoryStatus.EmployeeReserved:
                                            <span class="badge bg-secondary">員工預留</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@item.Inventory.Status</span>
                                            break;
                                    }
                                </td>
                                <td>
                                    @switch (item.Inventory.Type)
                                    {
                                        case InventoryType.Stock:
                                            <span class="badge bg-primary">庫存</span>
                                            break;
                                        case InventoryType.InTransit:
                                            <span class="badge bg-info">在途</span>
                                            break;
                                        case InventoryType.Reserved:
                                            <span class="badge bg-warning">預留</span>
                                            break;
                                        case InventoryType.Damaged:
                                            <span class="badge bg-danger">損壞</span>
                                            break;
                                        case InventoryType.Returned:
                                            <span class="badge bg-secondary">退貨</span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary">@item.Inventory.Type</span>
                                            break;
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@item.Inventory.Id" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i> 查看
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.Inventory.Id" class="btn btn-sm btn-outline-warning">
                                            <i class="fas fa-edit"></i> 編輯
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Inventory.Id" class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-trash"></i> 刪除
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="9" class="text-center text-muted">
                                <i class="fas fa-inbox fa-2x mb-3"></i>
                                <br>暫無庫存記錄
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- 移動端庫存卡片佈局 -->
        <div class="card-layout">
            @foreach (var item in Model)
            {
                <div class="product-card">
                    <div class="product-card-header">
                        <div class="product-sku">@item.Inventory.ProductSKU</div>
                        <div class="product-status @(item.Inventory.Status == InventoryStatus.Normal ? "bg-success" : item.Inventory.Status == InventoryStatus.LowStock ? "bg-warning" : item.Inventory.Status == InventoryStatus.OutOfStock ? "bg-danger" : "bg-info")">
                            @switch (item.Inventory.Status)
                            {
                                case InventoryStatus.Normal:
                                    <span>正常</span>
                                    break;
                                case InventoryStatus.LowStock:
                                    <span>低庫存</span>
                                    break;
                                case InventoryStatus.OutOfStock:
                                    <span>缺貨</span>
                                    break;
                                case InventoryStatus.Excess:
                                    <span>過剩</span>
                                    break;
                                case InventoryStatus.EmployeeReserved:
                                    <span>員工預留</span>
                                    break;
                                default:
                                    <span>@item.Inventory.Status</span>
                                    break;
                            }
                        </div>
                    </div>

                    <div class="product-name">@item.Product.Name</div>

                    <div class="product-details">
                        <div class="product-detail-item">
                            <div class="product-detail-label">庫存數量</div>
                            <div class="product-detail-value">@item.Inventory.Quantity 件</div>
                        </div>
                        <div class="product-detail-item">
                            <div class="product-detail-label">安全庫存</div>
                            <div class="product-detail-value">@item.Inventory.SafetyStock 件</div>
                        </div>
                        <div class="product-detail-item">
                            <div class="product-detail-label">預留數量</div>
                            <div class="product-detail-value">@item.Inventory.ReservedQuantity 件</div>
                        </div>
                        <div class="product-detail-item">
                            <div class="product-detail-label">庫存類型</div>
                            <div class="product-detail-value">
                                @switch (item.Inventory.Type)
                                {
                                    case InventoryType.Stock:
                                        <span class="badge bg-primary">庫存</span>
                                        break;
                                    case InventoryType.InTransit:
                                        <span class="badge bg-info">在途</span>
                                        break;
                                    case InventoryType.Reserved:
                                        <span class="badge bg-warning">預留</span>
                                        break;
                                    case InventoryType.Damaged:
                                        <span class="badge bg-danger">損壞</span>
                                        break;
                                    case InventoryType.Returned:
                                        <span class="badge bg-secondary">退貨</span>
                                        break;
                                    default:
                                        <span class="badge bg-secondary">@item.Inventory.Type</span>
                                        break;
                                }
                            </div>
                        </div>
                    </div>

                    <div class="product-pricing">
                        <div class="product-price">庫存價值: NT$ @((item.Inventory.Quantity * item.Product.Price).ToString("N2"))</div>
                        <div class="product-profit">
                            <div class="profit-amount">單價: NT$ @item.Product.Price.ToString("N2")</div>
                            <div class="profit-margin">成本: NT$ @item.Product.CostPrice.ToString("N2")</div>
                        </div>
                    </div>

                    <div class="product-actions">
                        <a asp-action="Details" asp-route-id="@item.Inventory.Id" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-eye me-1"></i>查看
                        </a>
                        <a asp-action="Edit" asp-route-id="@item.Inventory.Id" class="btn btn-outline-warning btn-sm">
                            <i class="fas fa-edit me-1"></i>編輯
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Inventory.Id" class="btn btn-outline-danger btn-sm">
                            <i class="fas fa-trash me-1"></i>刪除
                        </a>
                    </div>
                </div>
            }
        </div>

        @{
            var currentPage = ViewBag.CurrentPage as int? ?? 1;
            var pageSize = ViewBag.PageSize as int? ?? 10;
            var totalPages = ViewBag.TotalPages as int? ?? 1;
            int? productId = ViewBag.ProductId as int?;
            string? productSKU = ViewBag.ProductSKU as string;
            InventoryStatus? status = ViewBag.Status as InventoryStatus?;
        }
        @if (totalPages > 1)
        {
            <nav aria-label="Inventory pagination" class="mt-3">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-page="@(currentPage - 1)"
                           asp-route-pageSize="@pageSize"
                           asp-route-productId="@productId"
                           asp-route-productSKU="@productSKU"
                           asp-route-status="@status">上一頁</a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-page="@i"
                               asp-route-pageSize="@pageSize"
                               asp-route-productId="@productId"
                               asp-route-productSKU="@productSKU"
                               asp-route-status="@status">@i</a>
                        </li>
                    }
                    <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-page="@(currentPage + 1)"
                           asp-route-pageSize="@pageSize"
                           asp-route-productId="@productId"
                           asp-route-productSKU="@productSKU"
                           asp-route-status="@status">下一頁</a>
                    </li>
                </ul>
            </nav>
        }
    </div>
</div>


<!-- 批量更改安全庫存 Modal -->
<div class="modal fade" id="batchSafetyStockModal" tabindex="-1" aria-labelledby="batchSafetyStockModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="batchSafetyStockModalLabel">
                    <i class="fas fa-edit me-2"></i>批量更改安全庫存
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="BatchUpdateSafetyStock" method="post">
                <div class="modal-body">
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        此操作將批量更新所有庫存項目的安全庫存數量。
                    </div>

                    <div class="mb-3">
                        <label for="safetyStockValue" class="form-label">安全庫存數量</label>
                        <input type="number" class="form-control" id="safetyStockValue" name="safetyStock" min="0" value="10" required>
                        <div class="form-text">設定所有庫存項目的安全庫存數量</div>
                    </div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="confirmUpdate" required>
                            <label class="form-check-label" for="confirmUpdate">
                                我確認要批量更新所有庫存項目的安全庫存
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                    <button type="submit" class="btn btn-warning">
                        <i class="fas fa-save me-2"></i>確認更新
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- 庫存移動追蹤 -->
<div class="card mt-4">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="fas fa-history me-2"></i>庫存移動追蹤
        </h5>
    </div>
    <div class="card-body">
        <div class="row mb-3">
            <div class="col-md-3">
                <label for="trackingProductId" class="form-label">選擇產品</label>
                <select id="trackingProductId" class="form-select">
                    <option value="">全部產品</option>
                    @if (ViewBag.Products != null)
                    {
                        @foreach (var product in (List<Product>)ViewBag.Products)
                        {
                            <option value="@product.Id">@product.Name (@product.SKU)</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="trackingDateFrom" class="form-label">開始日期</label>
                <input type="date" id="trackingDateFrom" class="form-control">
            </div>
            <div class="col-md-3">
                <label for="trackingDateTo" class="form-label">結束日期</label>
                <input type="date" id="trackingDateTo" class="form-control">
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <div class="d-grid">
                    <button type="button" class="btn btn-primary" onclick="loadInventoryMovements()">
                        <i class="fas fa-search"></i> 查詢
                    </button>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-hover" id="movementTable">
                <thead class="table-dark">
                    <tr>
                        <th>時間</th>
                        <th>產品名稱</th>
                        <th>產品編號</th>
                        <th>移動類型</th>
                        <th>數量變化</th>
                        <th>移動前數量</th>
                        <th>移動後數量</th>
                        <th>操作人員</th>
                        <th>備註</th>
                    </tr>
                </thead>
                <tbody id="movementTableBody">
                    <tr>
                        <td colspan="9" class="text-center text-muted">
                            <i class="fas fa-info-circle fa-2x mb-3"></i>
                            <br>請選擇產品並設定日期範圍來查詢庫存移動記錄
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>function loadInventoryMovements() {
        const productId = document.getElementById('trackingProductId').value;
        const dateFrom = document.getElementById('trackingDateFrom').value;
        const dateTo = document.getElementById('trackingDateTo').value;

        // 顯示載入中
        const tbody = document.getElementById('movementTableBody');
        tbody.innerHTML = '<tr><td colspan="9" class="text-center"><i class="fas fa-spinner fa-spin"></i> 載入中...</td></tr>';

        // 構建查詢參數
        const params = new URLSearchParams();
        if (productId) params.append('productId', productId);
        if (dateFrom) params.append('startDate', dateFrom);
        if (dateTo) params.append('endDate', dateTo);

        // 呼叫真實的 API
        fetch(`/Inventory/GetMovements?${params.toString()}`)
            .then(response => response.json())
            .then(data => {
                if (data.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="9" class="text-center text-muted">沒有找到相關的庫存移動記錄</td></tr>';
                    return;
                }

                let html = '';
                data.forEach(movement => {
                    const changeClass = movement.quantityChange > 0 ? 'text-success' : 'text-danger';
                    const changeSign = movement.quantityChange > 0 ? '+' : '';
                    html += `
                    <tr>
                        <td>${new Date(movement.createdAt).toLocaleString('zh-TW')}</td>
                        <td>${movement.productName || '未知產品'}</td>
                        <td><span class="badge bg-light text-dark">${movement.productSKU || 'N/A'}</span></td>
                        <td>
                            <span class="badge ${getMovementTypeBadge(movement.movementType)}">
                                ${getMovementTypeName(movement.movementType)}
                            </span>
                        </td>
                        <td class="${changeClass}"><strong>${changeSign}${movement.quantityChange}</strong></td>
                        <td>${movement.previousQuantity}</td>
                        <td>${movement.newQuantity}</td>
                        <td>${movement.createdBy || '系統'}</td>
                        <td>${movement.reason || '無'}</td>
                    </tr>
                `;
                });

                tbody.innerHTML = html;
            })
            .catch(error => {
                console.error('載入庫存移動記錄時發生錯誤:', error);
                tbody.innerHTML = '<tr><td colspan="9" class="text-center text-danger">載入失敗，請稍後再試<br><small>錯誤詳情: ' + error.message + '</small></td></tr>';
            });
    }

    function getMovementTypeBadge(type) {
        switch (type) {
            case 1: return 'bg-success'; // Inbound
            case 2: return 'bg-danger';  // Outbound
            case 3: return 'bg-warning'; // Adjustment
            case 4: return 'bg-info';    // Transfer
            case 5: return 'bg-secondary'; // Count
            default: return 'bg-secondary';
        }
    }

    function getMovementTypeName(type) {
        switch (type) {
            case 1: return '進貨';
            case 2: return '出貨';
            case 3: return '調整';
            case 4: return '轉移';
            case 5: return '盤點';
            default: return '未知';
        }
    }

    // 設定預設日期範圍（最近30天）
    document.addEventListener('DOMContentLoaded', function () {
        const today = new Date();
        const thirtyDaysAgo = new Date(today.getTime() - (30 * 24 * 60 * 60 * 1000));

        document.getElementById('trackingDateTo').value = today.toISOString().split('T')[0];
        document.getElementById('trackingDateFrom').value = thirtyDaysAgo.toISOString().split('T')[0];
    });
    </script>