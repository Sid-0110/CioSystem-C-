@{
    ViewData["Title"] = "資料庫管理";

    // 格式化文件大小函數
    string FormatFileSize(long bytes)
    {
        if (bytes < 1024) return $"{bytes} B";
        if (bytes < 1024 * 1024) return $"{bytes / 1024:F1} KB";
        if (bytes < 1024 * 1024 * 1024) return $"{bytes / (1024 * 1024):F1} MB";
        return $"{bytes / (1024 * 1024 * 1024):F1} GB";
    }
}

<div class="container-fluid">
    <!-- 頁面標題 -->
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2 modern-title">
            <i class="fas fa-database text-success"></i> 資料庫管理
        </h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group me-2">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left"></i> 返回
                </a>
            </div>
        </div>
    </div>

    <!-- 消息顯示 -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- 資料庫資訊 -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle me-2"></i>資料庫資訊
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="text-center">
                                <i class="fas fa-database fa-2x text-primary mb-2"></i>
                                <h6>資料庫類型</h6>
                                <p class="text-muted">SQLite</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <i class="fas fa-table fa-2x text-success mb-2"></i>
                                <h6>產品數量</h6>
                                <p class="text-muted" id="dbTotalProducts">載入中...</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <i class="fas fa-hdd fa-2x text-warning mb-2"></i>
                                <h6>資料庫大小</h6>
                                <p class="text-muted" id="dbDatabaseSize">載入中...</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <i class="fas fa-calendar fa-2x text-info mb-2"></i>
                                <h6>最後備份</h6>
                                <p class="text-muted" id="dbLastBackup">載入中...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 備份管理 -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-download me-2"></i>資料庫備份
                    </h5>
                </div>
                <div class="card-body">
                    <p class="card-text">定期備份資料庫可以防止資料遺失，建議每天進行備份。</p>

                    <form asp-action="CreateBackup" method="post" class="d-grid gap-2">
                        <button type="submit" class="btn btn-success" onclick="return confirm('確定要備份資料庫嗎？')">
                            <i class="fas fa-download me-2"></i>立即備份
                        </button>
                        <button type="button" class="btn btn-outline-success" onclick="showBackupHistory()">
                            <i class="fas fa-history me-2"></i>備份歷史
                        </button>
                    </form>

                    <div class="mt-3">
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            備份檔案將保存在 /backups 目錄中
                        </small>
                    </div>

                    @if (ViewBag.BackupFiles != null)
                    {
                        <div class="mt-3">
                            <h6>最近的備份文件：</h6>
                            <div class="list-group">
                                @foreach (var backup in ViewBag.BackupFiles)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <div>
                                            <i class="fas fa-file-archive me-2"></i>
                                            @backup.FileName
                                            <small class="text-muted d-block">@backup.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</small>
                                        </div>
                                        <div>
                                            <span class="badge bg-secondary me-2">@FormatFileSize(backup.FileSizeBytes)</span>
                                            <a href="@Url.Action("DownloadBackup", new { backupFilePath = backup.FilePath })" class="btn btn-sm btn-outline-primary me-1">
                                                <i class="fas fa-download"></i>
                                            </a>
                                            <form asp-action="DeleteBackup" method="post" class="d-inline">
                                                <input type="hidden" name="backupFilePath" value="@backup.FilePath" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('確定要刪除此備份文件嗎？')">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-upload me-2"></i>資料庫還原
                    </h5>
                </div>
                <div class="card-body">
                    <p class="card-text">從備份檔案還原資料庫，請謹慎操作。</p>

                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-warning" onclick="showRestoreDialog()">
                            <i class="fas fa-upload me-2"></i>選擇還原
                        </button>
                        <button type="button" class="btn btn-outline-warning" onclick="showRestoreHistory()">
                            <i class="fas fa-history me-2"></i>還原歷史
                        </button>
                    </div>

                    @if (ViewBag.BackupFiles != null)
                    {
                        <div class="mt-3">
                            <h6>可用的備份文件：</h6>
                            <div class="list-group">
                                @foreach (var backup in ViewBag.BackupFiles)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        <div>
                                            <i class="fas fa-file-archive me-2"></i>
                                            @backup.FileName
                                            <small class="text-muted d-block">@backup.CreatedAt.ToString("yyyy-MM-dd HH:mm:ss")</small>
                                        </div>
                                        <div>
                                            <form asp-action="RestoreDatabase" method="post" class="d-inline">
                                                <input type="hidden" name="backupFilePath" value="@backup.FilePath" />
                                                <input type="hidden" name="createBackupBeforeRestore" value="true" />
                                                <button type="submit" class="btn btn-sm btn-warning" onclick="return confirm('確定要還原此備份嗎？此操作會覆蓋現有資料！')">
                                                    <i class="fas fa-upload me-1"></i>還原
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    <div class="mt-3">
                        <small class="text-danger">
                            <i class="fas fa-exclamation-triangle me-1"></i>
                            還原操作會覆蓋現有資料，請謹慎操作
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 資料清理 -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-broom me-2"></i>資料清理
                    </h5>
                </div>
                <div class="card-body">
                    <p class="card-text">清理舊資料可以釋放儲存空間，提升系統效能。</p>

                    <div class="mb-3">
                        <label for="cleanupDays" class="form-label">保留天數</label>
                        <select id="cleanupDays" class="form-select">
                            <option value="30">30 天</option>
                            <option value="60">60 天</option>
                            <option value="90" selected>90 天</option>
                            <option value="180">180 天</option>
                            <option value="365">365 天</option>
                        </select>
                    </div>

                    <form asp-action="CleanupDatabase" method="post" class="d-grid">
                        <input type="hidden" name="keepInventoryMovementsDays" value="90" />
                        <input type="hidden" name="keepLogsDays" value="30" />
                        <input type="hidden" name="cleanEmptyInventory" value="true" />
                        <input type="hidden" name="cleanInvalidProducts" value="true" />
                        <input type="hidden" name="optimizeDatabase" value="true" />
                        <input type="hidden" name="createBackupBeforeCleanup" value="true" />
                        <button type="submit" class="btn btn-warning" onclick="return confirmCleanup()">
                            <i class="fas fa-broom me-2"></i>開始清理
                        </button>
                    </form>

                    <div class="mt-3">
                        <small class="text-warning">
                            <i class="fas fa-exclamation-triangle me-1"></i>
                            清理操作無法復原，請確認後再執行
                        </small>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-pie me-2"></i>儲存空間分析
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <div class="d-flex justify-content-between">
                            <span>產品資料</span>
                            <span>45%</span>
                        </div>
                        <div class="progress mb-2">
                            <div class="progress-bar bg-primary" style="width: 45%"></div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between">
                            <span>庫存資料</span>
                            <span>30%</span>
                        </div>
                        <div class="progress mb-2">
                            <div class="progress-bar bg-success" style="width: 30%"></div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between">
                            <span>交易資料</span>
                            <span>20%</span>
                        </div>
                        <div class="progress mb-2">
                            <div class="progress-bar bg-warning" style="width: 20%"></div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between">
                            <span>系統資料</span>
                            <span>5%</span>
                        </div>
                        <div class="progress mb-2">
                            <div class="progress-bar bg-info" style="width: 5%"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 維護工具 -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-tools me-2"></i>維護工具
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <form asp-action="OptimizeDatabase" method="post" class="w-100">
                                <button type="submit" class="btn btn-outline-primary w-100 mb-2" onclick="return confirm('確定要優化資料庫嗎？')">
                                    <i class="fas fa-magic me-2"></i>
                                    優化資料庫
                                </button>
                            </form>
                        </div>
                        <div class="col-md-3">
                            <button type="button" class="btn btn-outline-success w-100 mb-2" onclick="checkIntegrity()">
                                <i class="fas fa-check-circle me-2"></i>
                                檢查完整性
                            </button>
                        </div>
                        <div class="col-md-3">
                            <button type="button" class="btn btn-outline-warning w-100 mb-2" onclick="rebuildIndexes()">
                                <i class="fas fa-sync me-2"></i>
                                重建索引
                            </button>
                        </div>
                        <div class="col-md-3">
                            <button type="button" class="btn btn-outline-info w-100 mb-2" onclick="showStatistics()">
                                <i class="fas fa-chart-bar me-2"></i>
                                統計資訊
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 備份歷史模態框 -->
<div class="modal fade" id="backupHistoryModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-history me-2"></i>備份歷史
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="backupList">
                    <!-- 備份列表將在這裡動態載入 -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                <button type="button" class="btn btn-primary" onclick="loadBackupHistory()">
                    <i class="fas fa-sync me-2"></i>重新載入
                </button>
            </div>
        </div>
    </div>
</div>

<!-- 資料庫還原模態框 -->
<div class="modal fade" id="restoreModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-undo me-2"></i>資料庫還原
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    還原操作會覆蓋現有資料，請謹慎操作！
                </div>
                <div class="mb-3">
                    <label for="restoreBackupPath" class="form-label">選擇備份文件</label>
                    <select id="restoreBackupPath" class="form-select">
                        <option value="">請選擇備份文件...</option>
                    </select>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="createBackupBeforeRestore" checked>
                    <label class="form-check-label" for="createBackupBeforeRestore">
                        還原前創建備份
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger" onclick="executeRestore()">
                    <i class="fas fa-undo me-2"></i>確認還原
                </button>
            </div>
        </div>
    </div>
</div>

<!-- 統計資訊模態框 -->
<div class="modal fade" id="statisticsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-chart-bar me-2"></i>資料庫統計資訊
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">資料統計</h6>
                            </div>
                            <div class="card-body">
                                <div class="row text-center">
                                    <div class="col-6 mb-3">
                                        <div class="border rounded p-2">
                                            <i class="fas fa-box fa-2x text-primary mb-2"></i>
                                            <h5 id="totalProducts">-</h5>
                                            <small class="text-muted">產品數量</small>
                                        </div>
                                    </div>
                                    <div class="col-6 mb-3">
                                        <div class="border rounded p-2">
                                            <i class="fas fa-warehouse fa-2x text-success mb-2"></i>
                                            <h5 id="totalInventory">-</h5>
                                            <small class="text-muted">庫存項目</small>
                                        </div>
                                    </div>
                                    <div class="col-6 mb-3">
                                        <div class="border rounded p-2">
                                            <i class="fas fa-shopping-cart fa-2x text-warning mb-2"></i>
                                            <h5 id="totalPurchases">-</h5>
                                            <small class="text-muted">採購記錄</small>
                                        </div>
                                    </div>
                                    <div class="col-6 mb-3">
                                        <div class="border rounded p-2">
                                            <i class="fas fa-cash-register fa-2x text-info mb-2"></i>
                                            <h5 id="totalSales">-</h5>
                                            <small class="text-muted">銷售記錄</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">系統資訊</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label">資料庫大小</label>
                                    <p class="form-control-plaintext" id="databaseSize">-</p>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">最後備份時間</label>
                                    <p class="form-control-plaintext" id="lastBackup">-</p>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">統計時間</label>
                                    <p class="form-control-plaintext" id="statisticsTime">-</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                <button type="button" class="btn btn-primary" onclick="loadDatabaseStatistics()">
                    <i class="fas fa-sync me-2"></i>重新載入
                </button>
            </div>
        </div>
    </div>
</div>

<script>// 全域變數
    let backupFiles = [];
    let databaseStatistics = null;

    // 頁面載入時初始化
    document.addEventListener('DOMContentLoaded', function () {
        loadBackupHistory();
        loadDatabaseStatistics();
    });

    // 載入備份歷史
    async function loadBackupHistory() {
        try {
            const response = await fetch('/api/DatabaseManagement/backups');
            const data = await response.json();

            if (data.success) {
                backupFiles = data.backupFiles;
                updateBackupHistoryUI();
            } else {
                showAlert('error', '載入備份歷史失敗：' + data.message);
            }
        } catch (error) {
            console.error('載入備份歷史失敗:', error);
            showAlert('error', '載入備份歷史失敗');
        }
    }

    // 更新備份歷史 UI
    function updateBackupHistoryUI() {
        const backupList = document.getElementById('backupList');
        const restoreSelect = document.getElementById('restoreBackupPath');

        if (!backupList) return;

        if (backupFiles.length === 0) {
            backupList.innerHTML = '<p class="text-muted">暫無備份文件</p>';
            if (restoreSelect) {
                restoreSelect.innerHTML = '<option value="">暫無備份文件</option>';
            }
            return;
        }

        // 更新備份歷史列表
        const html = backupFiles.map(backup => `
        <div class="d-flex justify-content-between align-items-center border-bottom py-2">
            <div>
                <h6 class="mb-1">${backup.fileName}</h6>
                <small class="text-muted">
                    ${new Date(backup.createdAt).toLocaleString()} |
                    ${(backup.fileSizeBytes / (1024 * 1024)).toFixed(1)} MB |
                    ${backup.isCompressed ? '壓縮' : '未壓縮'}
                    ${backup.description ? ' | ' + backup.description : ''}
                </small>
            </div>
            <div class="btn-group btn-group-sm">
                <button class="btn btn-outline-primary" onclick="validateBackup('${backup.filePath}')" title="驗證備份">
                    <i class="fas fa-check"></i>
                </button>
                <a href="/SystemSettings/DownloadBackup?backupFilePath=${encodeURIComponent(backup.filePath)}"
                   class="btn btn-outline-success" title="下載備份">
                    <i class="fas fa-download"></i>
                </a>
                <button class="btn btn-outline-danger" onclick="deleteBackup('${backup.filePath}')" title="刪除備份">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        </div>
    `).join('');

        backupList.innerHTML = html;

        // 更新還原選擇框
        if (restoreSelect) {
            const options = backupFiles.map(backup =>
                `<option value="${backup.filePath}">${backup.fileName} (${new Date(backup.createdAt).toLocaleString()})</option>`
            ).join('');
            restoreSelect.innerHTML = '<option value="">請選擇備份文件...</option>' + options;
        }
    }

    // 顯示備份歷史
    function showBackupHistory() {
        const modal = new bootstrap.Modal(document.getElementById('backupHistoryModal'));
        modal.show();
    }

    // 顯示還原對話框
    function showRestoreDialog() {
        // 確保備份列表已載入
        if (backupFiles.length === 0) {
            loadBackupHistory();
        }
        const modal = new bootstrap.Modal(document.getElementById('restoreModal'));
        modal.show();
    }

    // 顯示還原歷史
    function showRestoreHistory() {
        showAlert('info', '還原歷史記錄功能正在開發中...');
    }

    // 確認清理
    function confirmCleanup() {
        const days = document.getElementById('cleanupDays').value;
        return confirm(`確定要清理 ${days} 天前的舊資料嗎？此操作無法復原！`);
    }

    // 檢查完整性
    async function checkIntegrity() {
        try {
            showLoading('檢查資料庫完整性中...');

            // 這裡可以調用完整性檢查 API
            // 目前使用模擬數據
            await new Promise(resolve => setTimeout(resolve, 2000));

            hideLoading();
            showAlert('success', '資料庫完整性檢查完成，未發現問題');
        } catch (error) {
            hideLoading();
            showAlert('error', '完整性檢查失敗：' + error.message);
        }
    }

    // 重建索引
    async function rebuildIndexes() {
        try {
            if (!confirm('確定要重建所有索引嗎？這可能需要一些時間。')) {
                return;
            }

            showLoading('重建索引中...');

            // 這裡可以調用重建索引 API
            // 目前使用模擬數據
            await new Promise(resolve => setTimeout(resolve, 3000));

            hideLoading();
            showAlert('success', '索引重建完成');
        } catch (error) {
            hideLoading();
            showAlert('error', '重建索引失敗：' + error.message);
        }
    }

    // 顯示統計資訊
    async function showStatistics() {
        try {
            if (!databaseStatistics) {
                await loadDatabaseStatistics();
            }

            if (databaseStatistics) {
                showStatisticsModal();
            }
        } catch (error) {
            showAlert('error', '載入統計資訊失敗：' + error.message);
        }
    }

    // 載入資料庫統計資訊
    async function loadDatabaseStatistics() {
        try {
            const response = await fetch('/api/DatabaseManagement/statistics');
            const data = await response.json();

            if (data.success) {
                databaseStatistics = data.statistics;
                updateStatisticsUI();
            }
        } catch (error) {
            console.error('載入統計資訊失敗:', error);
        }
    }

    // 更新統計資訊 UI
    function updateStatisticsUI() {
        if (!databaseStatistics) return;

        // 更新主頁面統計資訊顯示
        const mainStatsElements = {
            'dbTotalProducts': document.getElementById('dbTotalProducts'),
            'dbDatabaseSize': document.getElementById('dbDatabaseSize'),
            'dbLastBackup': document.getElementById('dbLastBackup')
        };

        // 更新模態框統計資訊顯示
        const modalStatsElements = {
            'totalProducts': document.getElementById('totalProducts'),
            'totalInventory': document.getElementById('totalInventory'),
            'totalPurchases': document.getElementById('totalPurchases'),
            'totalSales': document.getElementById('totalSales'),
            'databaseSize': document.getElementById('databaseSize'),
            'lastBackup': document.getElementById('lastBackup'),
            'statisticsTime': document.getElementById('statisticsTime')
        };

        // 更新主頁面
        if (mainStatsElements.dbTotalProducts) mainStatsElements.dbTotalProducts.textContent = databaseStatistics.totalProducts + ' 個';
        if (mainStatsElements.dbDatabaseSize) mainStatsElements.dbDatabaseSize.textContent = databaseStatistics.databaseSizeMB + ' MB';
        if (mainStatsElements.dbLastBackup) {
            mainStatsElements.dbLastBackup.textContent = databaseStatistics.lastBackupTime
                ? new Date(databaseStatistics.lastBackupTime).toLocaleDateString()
                : '從未備份';
        }

        // 更新模態框
        if (modalStatsElements.totalProducts) modalStatsElements.totalProducts.textContent = databaseStatistics.totalProducts;
        if (modalStatsElements.totalInventory) modalStatsElements.totalInventory.textContent = databaseStatistics.totalInventory;
        if (modalStatsElements.totalPurchases) modalStatsElements.totalPurchases.textContent = databaseStatistics.totalPurchases;
        if (modalStatsElements.totalSales) modalStatsElements.totalSales.textContent = databaseStatistics.totalSales;
        if (modalStatsElements.databaseSize) modalStatsElements.databaseSize.textContent = databaseStatistics.databaseSizeMB + ' MB';
        if (modalStatsElements.lastBackup) {
            modalStatsElements.lastBackup.textContent = databaseStatistics.lastBackupTime
                ? new Date(databaseStatistics.lastBackupTime).toLocaleString()
                : '從未備份';
        }
        if (modalStatsElements.statisticsTime) {
            modalStatsElements.statisticsTime.textContent = new Date(databaseStatistics.generatedAt).toLocaleString();
        }
    }

    // 顯示統計資訊模態框
    function showStatisticsModal() {
        const modal = new bootstrap.Modal(document.getElementById('statisticsModal'));
        modal.show();
    }

    // 驗證備份文件
    async function validateBackup(backupFilePath) {
        try {
            showLoading('驗證備份文件中...');

            const response = await fetch(`/api/DatabaseManagement/backups/validate?backupFilePath=${encodeURIComponent(backupFilePath)}`);
            const data = await response.json();

            hideLoading();

            if (data.success && data.isValid) {
                showAlert('success', '備份文件驗證成功');
            } else {
                showAlert('warning', '備份文件驗證失敗：' + data.message);
            }
        } catch (error) {
            hideLoading();
            showAlert('error', '驗證備份文件失敗：' + error.message);
        }
    }

    // 刪除備份文件
    async function deleteBackup(backupFilePath) {
        try {
            if (!confirm('確定要刪除這個備份文件嗎？此操作無法復原！')) {
                return;
            }

            showLoading('刪除備份文件中...');

            const response = await fetch(`/api/DatabaseManagement/backups?backupFilePath=${encodeURIComponent(backupFilePath)}`, {
                method: 'DELETE'
            });
            const data = await response.json();

            hideLoading();

            if (data.success) {
                showAlert('success', '備份文件刪除成功');
                loadBackupHistory(); // 重新載入備份列表
            } else {
                showAlert('error', '刪除備份文件失敗：' + data.message);
            }
        } catch (error) {
            hideLoading();
            showAlert('error', '刪除備份文件失敗：' + error.message);
        }
    }

    // 執行還原操作
    async function executeRestore() {
        try {
            const backupFilePath = document.getElementById('restoreBackupPath').value;
            if (!backupFilePath) {
                showAlert('warning', '請選擇要還原的備份文件');
                return;
            }

            if (!confirm('確定要還原資料庫嗎？這將覆蓋現有資料！')) {
                return;
            }

            showLoading('還原資料庫中...');

            const response = await fetch('/api/DatabaseManagement/restore', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    backupFilePath: backupFilePath,
                    createBackupBeforeRestore: true
                })
            });
            const data = await response.json();

            hideLoading();

            if (data.success) {
                showAlert('success', '資料庫還原成功');
                bootstrap.Modal.getInstance(document.getElementById('restoreModal')).hide();
                loadDatabaseStatistics(); // 重新載入統計資訊
            } else {
                showAlert('error', '資料庫還原失敗：' + data.message);
            }
        } catch (error) {
            hideLoading();
            showAlert('error', '還原資料庫失敗：' + error.message);
        }
    }

    // 工具函數
    function showAlert(type, message) {
        const alertClass = type === 'error' ? 'alert-danger' :
            type === 'warning' ? 'alert-warning' :
                type === 'info' ? 'alert-info' : 'alert-success';

        const alertHtml = `
        <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
            <i class="fas fa-${type === 'error' ? 'exclamation-circle' :
                type === 'warning' ? 'exclamation-triangle' :
                    type === 'info' ? 'info-circle' : 'check-circle'} me-2"></i>
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;

        const container = document.querySelector('.container-fluid');
        container.insertAdjacentHTML('afterbegin', alertHtml);

        // 自動隱藏警告
        setTimeout(() => {
            const alert = container.querySelector('.alert');
            if (alert) {
                alert.remove();
            }
        }, 5000);
    }

    function showLoading(message) {
        const loadingHtml = `
        <div id="loadingModal" class="modal fade" tabindex="-1" data-bs-backdrop="static">
            <div class="modal-dialog modal-sm modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-body text-center">
                        <div class="spinner-border text-primary mb-3" role="status">
                            <span class="visually-hidden">載入中...</span>
                        </div>
                        <p class="mb-0">${message}</p>
                    </div>
                </div>
            </div>
        </div>
    `;

        document.body.insertAdjacentHTML('beforeend', loadingHtml);
        const loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));
        loadingModal.show();
    }

    function hideLoading() {
        const loadingModal = bootstrap.Modal.getInstance(document.getElementById('loadingModal'));
        if (loadingModal) {
            loadingModal.hide();
            document.getElementById('loadingModal').remove();
        }
    }</script>

<style>
    .modern-title {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-weight: 600;
    }

    .card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        border: none;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-bottom: 1px solid #dee2e6;
    }

    .btn {
        transition: all 0.3s ease;
    }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    .progress {
        height: 8px;
    }
</style>